#!/bin/bash
cat << EOF | less
usage:
jcd-new classlib <options>
   --framework=<framework>          OPTIONAL. Specify the target framework.
                                    Specifying the framework excludes specifying the netstandard version.
                                    The following frameworks are recognized by jcd-new:
                                    * netstandard1.0 to netstandard1.6
                                    * netstandard2.0 and netstandard2.1
                                    * netcoreapp1.0 and netcoreapp1.1
                                    * netcoreapp2.0 to netcoreapp2.2
                                    * netcoreapp3.0 and netcoreapp3.1
                                    * net5.0 and net6.0

   -f=<framework>                   An alias for --framework=

   --license=<license>              OPTIONAL. Specify the an OSS license for the project. (MIT is the default if not specified.)
                                    Supported licenses are as follows:
                                      * 'Apache-2.0' for the Apache 2.0
                                      * 'BSD-1' for the BSD 1-Clause License
                                      * 'BSD-2' for the BSD 2-Clause License
                                      * 'BSD-3' for the BSD 3-Clause License
                                      * 'ISC' for the ISC License
                                      * 'JAM' for the JAM License
                                      * 'MIT' for the MIT License
                                      * 'MIT-0' for the MIT No Attribution License
                                      * 'UPL' for the The Universal Permissive License (UPL), Version 1.0

                                    Example 1:
                                    $ jcd-new classlib --license=Apache-2.0 -ngh -p=Some.Project
                                    Will generate Some.Project with the Apache-2.0 license text in the LICENSE file.

                                    Example 2:
                                    $ jcd-new classlib -ngh -p=Some.Project
                                    Will generate Some.Project with the MIT license text in the LICENSE file.

   -lic=<license>                   An alias for --license=

   --project-name=<project-name>    REQUIRED. Specifies the name of the classlib you wish to create.

   --project=<project-name>         An alias for --project-name=

   -p=<project-name>                An alias for --project-name=

   --no-commit                      OPTIONAL. If specified, skips the initial commit to the local Git repository.
                                    Implies --no-github

   -nc                              An alias for --no-commit

   --no-github                      OPTIONAL. If specified, skips the github integration steps.

   -ngh                             An alias for --no-github

   --netstandard-version=<version>  OPTIONAL. Sets the .NET Standard version to use for the library.
                                    Specifying the netstandard version excludes specifying the framework.
                                    The default is 2.1. Valid options are: 1.0, 1.1, 1.2, 1.3, 1.4, 1.5,
                                    1.6, 2.0 and 2.1.

   -nsv=<version>                   An alias for --netstandard-version

   --version                        Prints the version of jcd-new in use.

REQUIRED EXTERNAL TOOLS:
   * gh - This is the github command-line. It's required to automatically upload your code to github.
          On windows this is available through chocolatey via: choco install gh
          To install on linux see this document: https://github.com/cli/cli/blob/trunk/docs/install_linux.md

   * dotnet - This is the .NET Core command-line. It's required to create the project structure.

REQUIRED ENVIRONMENT VARIABLES:
You must have the following environment variables defined:
  * github - must point to the root folder for your personal github repositories.

  * GITHUB_USER_NAME - this is required for generating the correct documentation from
                       various template files.

  * FULL_NAME - this is required for generating the correct documentation from various
                template files.

OPTIONAL ENVIRONMENT VARIABLES:
While you don't need to have the following environment variables defined, they can be helpful:

  * KOFI_ID - This is your id on ko-fi.com, assuming you have one. If not provide this entry in .github/FUNDING.yml will be blank.
    If you don't want to solicit any funding, remove .github/FUNDING.yml after the project is created.

  * PATREON_ID - This is your id on patreon.com, assuming you have one. If not this entry in .github/FUNDING.yml will be blank.
    If you don't want to solicit any funding, remove .github/FUNDING.yml after the project is created.

  * PROJECT_EMAIL - This is the email address where you want people to contact you at regarding this project.
    If it's not provided the following will be used: project.email@not.a.real.domain.org; edit CODE_OF_CONDUCT.md
    to remove references to it if you do not want people to contact you via email for the project.

  * NUGET_PACKAGE_ICON_URL - This is the URL to the image that will be used when packaging the nuget package. If it's
    not provided the default nuget icon will be used.

DEPRECATED ENVIRONMENT VARIABLE:

  * GITHUB_TOKEN - this will be used, if present, but issue a warning about it being a security risk.


EXAMPLES:
# Create a .NET Standard 2.1 class library and push it to github
jcd-new classlib --project-name=Jcd.Delete.Me1
jcd-new classlib --project=Jcd.Delete.Me2
jcd-new classlib -p=Jcd.Delete.Me3

# Create a .NET 6.0 class library and push it to GitHub
jcd-new classlib -p=Jcd.Delete.Me1 --framework=net6.0
jcd-new classlib -p=Jcd.Delete.Me1 -f=net6.0

# Create a .NET Standard 1.0 class library and push it to GitHub
jcd-new classlib -p=Jcd.Delete.Me1 --netstandard-version=1.0
jcd-new classlib -p=Jcd.Delete.Me1 -nsv=1.0

# Create a class library, perform the initial local commit, but DO NOT push it to GitHub
jcd-new classlib -p=Jcd.Delete.Me4 --no-github
jcd-new classlib -p=Jcd.Delete.Me5 -ngh

# Create a class library, DO NOT perform the initial local commit nor push it to GitHub
jcd-new classlib -p=Jcd.Delete.Me6 --no-commit
jcd-new classlib -p=Jcd.Delete.Me7 -nc

# Create a class library, with the BSD 1-Clause license, and push to GitHub
jcd-new classlib -p=Jcd.Delete.Me8 --license=BSD-1
jcd-new classlib -p=Jcd.Delete.Me9 -lic=BSD-1

# Display the version number for jcd-new
jcd-new version
jcd-new --version
jcd-new classlib --version

# Get help on using jcd-new
jcd-new help

# get help on using jcd-new classlib
jcd-new help classlib

EOF